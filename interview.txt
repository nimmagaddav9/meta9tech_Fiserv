React with Typescript interview Q&A

1. What is Type casting ?
Type casting in TypeScript is a way to explicitly tell the compiler to treat a variable as a specific type. 
It’s useful when TypeScript can't infer the type, like working with any or DOM elements. 
In React, we commonly use as syntax — for example: (ref.current as HTMLInputElement).focus(); — to ensure type safety and access specific properties.

2. What are union?
In TypeScript, a union type allows a variable to hold more than one type. 
It's defined using the | symbol. 
For example: let value: string | number; means the variable can be either a string or a number. 
Union types are useful for handling flexible inputs while still maintaining type safety.

3. What is Tuples?
In TypeScript, a tuple is a fixed-length array where each element has a specific type. 
It allows you to define the exact type and position of elements. 
For example: let user: [string, number] = ['John', 30]; means the first value must be a string, and the second a number. 
Tuples are useful when working with structured data like key-value pairs or coordinates.

4. difference between Interface vs types
Both interface and type are used to define custom types in TypeScript, but they have some differences.
interface is best for defining object shapes and is extendable using extends or declaration merging.
type is more flexible — it can represent primitives, unions, tuples, and intersections.
For example, you can’t use a union like type A = string | number with interface, but you can with type.

5. What is Tsconfig.json?
tsconfig.json is the configuration file for a TypeScript project. 
It tells the TypeScript compiler how to compile the code — including which files to include, what language features to support, and how strict the type checks should be. 
For example, it includes settings like target, module, strict, and jsx for React projects. 
It helps ensure consistent behavior across different environments and developers.