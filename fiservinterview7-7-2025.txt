Technical quesitons:

1. Introduce yourself?

2. folder strructure?

3. redux?

4. Difference Between Interface vs Type?

5. WCAG 2.0 guidelines?

6. code review how do you do?

7. deployment process?

8. what is your role? dev or lead?

9. when they are data issues how does backend and front end coordinate?

10. what is datatype: any and unknown in typescript? difference?

11. have you used react-hooks? 

12. what is customHook?

13. how to improve performances?

14. what is cross browser compatability issues?

15. what is webpack?

16. for accessbility testing which tool did you use?

17. what is your team size?

18. have you worked on the production environment?

19. What is the input for webpack?

20. How to enable cors with webpack?


coding question:

/*
 * Click `Run` to execute the snippet below!
 * [[1,9,3] , [5,4,8] ,[2,7,6]]
 *
 * "ALL ASC" - [[1,2,3] , [4,5,6] ,[7,8,9]]
 * "BLOCK ASC" - [[1,3,9] , [4,5,8] ,[2,6,7]]
 *. "ALL DESC" - [[9,8,7] , [6,5,4] ,[3,2,1]]
 * "Block DESC" - [[9,3,1] , [8,5,4] ,[7,6,7]]
 */

 import React, { useState } from 'react';

const App: React.FC = () => {
  const originalMatrix = [
    [1, 9, 3],
    [5, 4, 8],
    [2, 7, 6],
  ];

  const [mode, setMode] = useState('');
  const [result, setResult] = useState<number[][]>(originalMatrix);

  const transformMatrix = (type: string) => {
    let newMatrix: number[][] = [];

    if (type === 'ALL ASC' || type === 'ALL DESC') {
      const allNumbers = originalMatrix.flat();
      const sorted = allNumbers.sort((a, b) => (type === 'ALL ASC' ? a - b : b - a));
      for (let i = 0; i < 3; i++) {
        newMatrix.push(sorted.slice(i * 3, (i + 1) * 3));
      }
    } else if (type === 'BLOCK ASC' || type === 'BLOCK DESC') {
      newMatrix = originalMatrix.map((row) =>
        [...row].sort((a, b) => (type === 'BLOCK ASC' ? a - b : b - a))
      );
    }

    setMode(type);
    setResult(newMatrix);
  };

  return (
    <div style={{ padding: '20px', background: '#f3f3f3', fontFamily: 'Arial' }}>
      <h3>Original Matrix:</h3>
      <pre>{JSON.stringify(originalMatrix, null, 2)}</pre>

      <div style={{ margin: '10px 0' }}>
        {['ALL ASC', 'ALL DESC', 'BLOCK ASC', 'BLOCK DESC'].map((m) => (
          <button key={m} onClick={() => transformMatrix(m)} style={{ marginRight: '10px' }}>
            {m}
          </button>
        ))}
      </div>

      <h3>Mode: {mode}</h3>
      <h3>Result:</h3>
      <pre>{JSON.stringify(result, null, 2)}</pre>
    </div>
  );
};

export default App;
